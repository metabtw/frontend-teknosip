"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./context/AuthContext.tsx":
/*!*********************************!*\
  !*** ./context/AuthContext.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: () => (/* binding */ AuthContext),\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/api */ \"(app-pages-browser)/./utils/api.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthContext,AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Token geçerliliğini kontrol et\n    const isTokenValid = ()=>{\n        const token = localStorage.getItem('accessToken');\n        if (!token) return false;\n        try {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            const currentTime = Date.now() / 1000;\n            return payload.exp > currentTime;\n        } catch (e) {\n            return false;\n        }\n    };\n    // Kullanıcı bilgilerini token'dan çıkar\n    const getUserFromToken = (token)=>{\n        try {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            console.log('Token payload:', payload);\n            // Role mapping: Backend'den gelen sayısal değerleri map et\n            let role = payload.role;\n            console.log('Original role from token:', role, 'Type:', typeof role);\n            // Hem sayısal hem string değerleri frontend rol isimlerine map et\n            switch(role){\n                case 1:\n                case 'SuperAdmin':\n                    role = 'super-admin'; // Backend: SuperAdmin=1 veya 'SuperAdmin'\n                    break;\n                case 2:\n                case 'Admin':\n                    role = 'company-admin'; // Backend: Admin=2 veya 'Admin'\n                    break;\n                case 3:\n                case 'User':\n                    role = 'employee'; // Backend: User=3 veya 'User'\n                    break;\n                default:\n                    role = 'unknown';\n            }\n            console.log('Mapped role:', role);\n            const user = {\n                id: payload.nameid || payload.sub || payload.userId,\n                name: payload.name || (payload.given_name && payload.family_name ? payload.given_name + ' ' + payload.family_name : 'Kullanıcı'),\n                email: payload.email,\n                role: role,\n                companyId: payload.companyId,\n                companyName: payload.companyName,\n                position: payload.position,\n                permissions: payload.permissions ? payload.permissions.split(',') : []\n            };\n            console.log('Final user object:', user);\n            return user;\n        } catch (error) {\n            console.error('Error parsing token:', error);\n            return null;\n        }\n    };\n    // Refresh token ile yeni access token al\n    const refreshToken = async ()=>{\n        const refreshTokenValue = localStorage.getItem('refreshToken');\n        if (!refreshTokenValue) return false;\n        try {\n            const response = await fetch(\"\".concat(\"http://localhost:5071/api\" || 0, \"/Auth/RefreshToken\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    refreshToken: refreshTokenValue\n                })\n            });\n            if (response.ok) {\n                const data = await response.json();\n                localStorage.setItem('accessToken', data.data.accessToken);\n                localStorage.setItem('refreshToken', data.data.refreshToken);\n                const userData = getUserFromToken(data.data.accessToken);\n                if (userData) {\n                    setUser(userData);\n                    return true;\n                }\n            }\n        } catch (error) {\n            console.error('Token refresh failed:', error);\n        }\n        return false;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            const initAuth = {\n                \"AuthProvider.useEffect.initAuth\": async ()=>{\n                    const token = localStorage.getItem('accessToken');\n                    if (token) {\n                        if (isTokenValid()) {\n                            const userData = getUserFromToken(token);\n                            if (userData) {\n                                setUser(userData);\n                            }\n                        } else {\n                            // Token süresi dolmuş, refresh token dene\n                            const refreshed = await refreshToken();\n                            if (!refreshed) {\n                                // Refresh token da başarısız, logout yap\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('refreshToken');\n                                router.push('/auth/login');\n                            }\n                        }\n                    }\n                    setLoading(false);\n                }\n            }[\"AuthProvider.useEffect.initAuth\"];\n            initAuth();\n        }\n    }[\"AuthProvider.useEffect\"], [\n        router\n    ]);\n    const login = async (email, password)=>{\n        try {\n            setLoading(true);\n            // API'ye login isteği gönder\n            const response = await (0,_utils_api__WEBPACK_IMPORTED_MODULE_3__.loginUser)(email, password);\n            if (response.isSuccess && response.accessToken && response.refreshToken) {\n                // Token'ları localStorage'a kaydet\n                localStorage.setItem('accessToken', response.accessToken);\n                localStorage.setItem('refreshToken', response.refreshToken);\n                // Token'dan kullanıcı bilgilerini çıkar\n                const userData = getUserFromToken(response.accessToken);\n                if (userData) {\n                    setUser(userData);\n                    // Role based routing\n                    switch(userData.role){\n                        case 'super-admin':\n                            router.push('/admin/dashboard');\n                            break;\n                        case 'company-admin':\n                            router.push('/company-admin/dashboard');\n                            break;\n                        case 'employee':\n                            router.push('/employee/dashboard');\n                            break;\n                        case 'unknown':\n                            throw new Error('Tanımlanmamış kullanıcı rolü. Lütfen sistem yöneticisi ile iletişime geçin.');\n                        default:\n                            throw new Error(\"Ge\\xe7ersiz kullanıcı rol\\xfc: \".concat(userData.role));\n                    }\n                } else {\n                    throw new Error('Kullanıcı bilgileri alınamadı');\n                }\n            } else {\n                throw new Error(response.message || 'Giriş başarısız');\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            throw new Error(error.message || 'Giriş sırasında bir hata oluştu');\n        } finally{\n            setLoading(false);\n        }\n    };\n    const logout = ()=>{\n        setUser(null);\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        router.push('/auth/login');\n    };\n    const registerCompany = async (companyData)=>{\n        try {\n            const result = await (0,_utils_api__WEBPACK_IMPORTED_MODULE_3__.registerCompany)(companyData);\n            return result;\n        } catch (error) {\n            throw new Error(error.message || 'Şirket kaydı sırasında bir hata oluştu');\n        }\n    };\n    const addEmployee = async (employeeData)=>{\n        // Mock employee registration\n        return new Promise((resolve, reject)=>{\n            if (!user || user.role !== 'company-admin') {\n                reject(new Error('Çalışan ekleme yetkisi yok'));\n                return;\n            }\n            setTimeout(()=>{\n                const newEmployee = {\n                    id: \"emp-\".concat(Date.now()),\n                    name: employeeData.name,\n                    email: employeeData.email,\n                    role: 'employee',\n                    companyId: user.companyId,\n                    companyName: user.companyName,\n                    position: employeeData.position,\n                    permissions: employeeData.permissions\n                };\n                console.log('Çalışan eklendi:', newEmployee);\n                resolve();\n            }, 1500);\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            login,\n            logout,\n            registerCompany,\n            addEmployee,\n            loading,\n            isTokenValid,\n            refreshToken\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\muham\\\\OneDrive\\\\Desktop\\\\teknozip\\\\context\\\\AuthContext.tsx\",\n        lineNumber: 277,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"J17Kp8z+0ojgAqGoY5o3BCjwWms=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AuthProvider;\nconst useAuth = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./context/AuthContext.tsx\n"));

/***/ })

});